#include <behaviors.dtsi>
#include <zmk-helpers/helper.h>
#include "zmk-helpers/key-labels/42.h"
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define XXX &none
#define QUICK_TAP_MS 175

#define DEF 0
#define NAV 1
#define FN 2
#define NUM 3
#define SYS 4
#define MOUSE 5

// Define mod-morph with a *single* mod trigger for less repetition.
#define SIMPLE_MORPH(NAME, MOD, BINDING1, BINDING2)                            \
  ZMK_MOD_MORPH(NAME, mods = <(MOD_L##MOD | MOD_R##MOD)>;                      \
                bindings = <BINDING1>, <BINDING2>;)

// Tap: left/right parenthesis | Shft + tap: less-than/greater-than.
SIMPLE_MORPH(lpar_lt, SFT, &kp LPAR, &kp LT)
SIMPLE_MORPH(rpar_gt, SFT, &kp RPAR, &kp GT)

// Tap: comma | Shift + tap: semicolon | Ctrl + shift + tap: <.
SIMPLE_MORPH(comma_morph, SFT, &kp COMMA, &comma_inner_morph)
SIMPLE_MORPH(comma_inner_morph, CTL, &kp SEMICOLON, &kp LESS_THAN)

// Tap: dot | Shift + tap: colon | Ctrl + shift + tap: >.
SIMPLE_MORPH(dot_morph, SFT, &kp DOT, &dot_inner_morph)
SIMPLE_MORPH(dot_inner_morph, CTL, &kp COLON, &kp GREATER_THAN)

// Tap: qmark | Shift + tap: excl.
SIMPLE_MORPH(qexcl, SFT, &kp QMARK, &kp EXCL)

#define KEYS_L LT0 LT1 LT2 LT3 LT4 LT5 LM0 LM1 LM2 LM3 LM4 LM5 LB0 LB1 LB2 LB3 LB4 LB5
#define KEYS_R RT0 RT1 RT2 RT3 RT4 RT5 RM0 RM1 RM2 RM3 RM4 RM5 RB0 RB1 RB2 RB3 RB4 RB5
#define THUMBS LH2 LH1 LH0 RH0 RH1 RH2

#define MAKE_HRM(NAME, HOLD, TAP, TRIGGER_POS)                                 \
  ZMK_HOLD_TAP(NAME, bindings = <HOLD>, <TAP>; flavor = "balanced";            \
               tapping-term-ms = <280>; quick-tap-ms = <QUICK_TAP_MS>;         \
               require-prior-idle-ms = <150>; hold-trigger-on-release;         \
               hold-trigger-key-positions = <TRIGGER_POS>;)

MAKE_HRM(hml, &kp, &kp, KEYS_R THUMBS) // Left-hand HRMs.
MAKE_HRM(hmr, &kp, &kp, KEYS_L THUMBS) // Right-hand HRMs.

// Hack: Make HRM combos tap-only (cf, ZMK issue #544).
#define ZMK_COMBO_8(NAME, TAP, POS, LAYERS, COMBO_MS, IDLE_MS, HOLD, SIDE)     \
  MAKE_HRM(hm_combo_##NAME, &kp, TAP, SIDE THUMBS)                             \
  ZMK_COMBO_6(NAME, &hm_combo_##NAME HOLD 0, POS, LAYERS, COMBO_MS, IDLE_MS)

#include "combos.dtsi"

// Keymap
#ifndef ZMK_BASE_LAYER
  #define ZMK_BASE_LAYER(name, LT, RT, LM, RM, LB, RB, LH, RH)                 \
      ZMK_LAYER(name, LT RT LM RM LB RB LH RH)
#endif

ZMK_BASE_LAYER(Base,
   XXX &kp B      &kp L       &kp D        &kp W        &kp Z,       &kp SQT &kp F         &kp O          &kp U         &kp J      XXX,
   XXX &hml GUI N &hml LALT R &hml LSHFT T &hml LCTRL S &kp G,       &kp Y   &hmr RCTRL H  &hmr RSHFT A   &hmr RALT E   &hmr GUI I XXX,
   XXX &kp Q      &kp X       &kp M        &kp C        &kp V,       &kp K   &kp P         &comma_morph   &dot_morph    &qexcl     &tog Qwerty,
                              &kp LGUI     &mo 1        &kp SPACE,   &kp RET &mo 2         &kp RALT
)

ZMK_BASE_LAYER(Qwerty,
   XXX &kp Q      &kp W       &kp E        &kp R        &kp T,       &kp Y   &kp U         &kp I          &kp O         &kp P      XXX,
   XXX &hml GUI A &hml LALT S &hml LSHFT D &hml LCTRL F &kp G,       &kp H   &hmr RCTRL J  &hmr RSHFT K   &hmr RALT L   &hmr GUI SEMICOLON  XXX,
   XXX &kp Z      &kp X       &kp C        &kp V        &kp B,       &kp N   &kp M         &comma_morph   &dot_morph    &qexcl     &tog Qwerty,
                              &kp LGUI     &mo 1        &kp SPACE,   &kp RET &mo 2         &kp RALT
)
